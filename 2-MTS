2ND QUESTION CODE

APP.COMPONENT.HTML
<div>
<h3 style="text-align:center;font-size: 40px;">Multiple Components

</h3>
<app-usa></app-usa>
</div>


USA.COMPONENT.HTML
<div class="class1">
<h3 style="font-size: 34px;">United State</h3>
<app-new></app-new>
<app-washington></app-washington>
</div>

CSS
.class1 {
    background-color: black;  
    color: white;
    display:flex;
    flex-direction: row;
    width: 1000px;
    height: 500px;
    margin-left: 250px;
}


NEWYORK HTML
<div class="class2">
  <h1 style="text-align: center;">NEW YORK</h1>
</div>

CSS
div{
    background-color:antiquewhite;
    width: 300px;
    height:200px;
    margin-right: 100px;
    margin-left: -50px;
    color: black;
    margin-top: 150px;
}



WASHINTON HTML
<div class="=class2">
  <h1 style="text-align: center;">WASHINGTON</h1>
</div>

CSS
div{
    background-color: antiquewhite;
    color: black;
    width: 300px;
    height:200px;
    margin-top: 150px;

}




3RD QUESTION CODE

HTML
<div class="container">
  <h3>PRODUCT DETAILS</h3>
  <form [formGroup]="myform" (ngSubmit)="store()">
 
    <div class="form-group" >
      <label for="pname">Product Name</label>
      <input type="text" class="form-control" id="pname"  formControlName="pname">
      <small style="color:red" *ngIf="pname && pname.invalid && pname.touched">Name is Required</small>
       
    </div>
    <div class="form-group">
      <label for="pbrand">Product Brand</label>
      <input type="text" class="form-control" id="pbrand" formControlName="pbrand">
      <div *ngIf="pbrand.touched && pbrand.invalid">
      <small style="color:red" *ngIf="pbrand.errors.required">Brand is Required</small><br/>
        </div>
    </div>
    <div class="form-group">
      <label for="pprice">Product Price</label>
      <input type="text" class="form-control" id="pprice" formControlName="pprice">
      <div *ngIf="pprice.touched && pprice.invalid">
        <small style="color:red" *ngIf="pprice.errors.required">Price is Required</small><br/>
          </div>
     </div>
    
    
    <button class="btn btn-primary" [disabled]="emsform.invalid">STORE</button>
 
  </form>
 
 </div>
 <div style="margin-top:10px;">
  <div class="productdetails">
  <table class="table">
  <thead class="thead-light">
  <tr>
  <th>PRODUCT NAME</th>
  <th>PRODUCT BRAND</th>
  <th>PRODUCT PRICE</th>
  </tr>
  </thead>
 <tbody>
  <tr>
  <td>{{pname}}</td>
  <td>{{pbrand}}</td>
  <td>{{pprice}}</td>
  </tr>
  </tbody>
  </table>
  </div>
 
 </div>
 
 
 
 APP.COMPONENT.TS
 import { Component } from '@angular/core';
import {FormGroup,Validators,FormControl} from '@angular/forms';
import { Product } from './product/product.component';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  myform:FormGroup;
 pname:string;
 pbrand:string;
 pprice:number;
 product:Product []= [];
constructor(){
  this.myform=new FormGroup({
    pname:new FormControl(null,[Validators.required]),
    pbrand:new FormControl(null,[Validators.required]),
    pprice:new FormControl(null,[Validators.required,Validators.pattern('[0-9]+')])
  });
 }
get name(){
  return this.myform.get('name');
 }
get brand(){
  return this.myform.get('brand');
}
get price(){
 return this.myform.get('price');
}

store(){
  this.product.push(new Product(this.myform.value.pname,this.myform.value.pbrand,this.myform.value.pprice));

 } 
}




MODULE.TS
import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { FormsModule,ReactiveFormsModule } from '@angular/forms';
import { AppComponent } from './app.component';
import { Product } from './product/product.component';


@NgModule({
  declarations: [
    AppComponent,
    Product
  ],
  imports: [
    BrowserModule,FormsModule,ReactiveFormsModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
